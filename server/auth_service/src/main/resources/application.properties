spring.application.name=auth_service
server.port=8081

#POSTGRESQL
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_service
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#CONTROLLER ADVICE
spring.web.resources.add-mappings=false

#REDIS
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.redis.time-to-live=600000

#OAUTH2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH_CLIENT_SECRET}

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8080/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.enabled=true

# Make Eureka Optional
eureka.client.healthcheck.enabled=false
eureka.instance.prefer-ip-address=true
